{"version":3,"sources":["Images/ImagePankaj.jpg","component/hello.js","component/counterExample.js","component/Particles.js","component/Name.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","React","Component","CounterExample","ParticlesRender","render","params","style","position","padding","margin","top","left","width","height","background","Name","src","pic","className","App","Particles","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"6FAAAA,EAAOC,QAAU,IAA0B,yC,yOCExBC,IAAMC,U,OCqBVC,I,0BC+GAC,MAjIf,WAIQ,OAFJC,cAGQ,kBAAC,IAAD,CACIC,OAAQ,CACJ,UAAa,CACT,OAAU,CACR,MAAS,GACT,QAAW,CACT,QAAU,EACV,WAAc,MAGlB,MAAS,CACP,MAAS,WAEX,MAAS,CACP,KAAQ,SACR,OAAU,CACR,MAAS,EACT,MAAS,WAEX,QAAW,CACT,SAAY,IAGhB,QAAW,CACT,MAAS,GACT,QAAU,EACV,KAAQ,CACN,QAAU,EACV,MAAS,EACT,YAAe,GACf,MAAQ,IAGZ,KAAQ,CACN,MAAS,EACT,QAAU,EACV,KAAQ,CACN,QAAU,EACV,MAAS,GACT,SAAY,GACZ,MAAQ,IAGZ,YAAe,CACb,QAAU,EACV,SAAY,IACZ,MAAS,UACT,QAAW,GACX,MAAS,GAEX,KAAQ,CACN,QAAU,EACV,MAAS,EACT,UAAa,OACb,QAAU,EACV,UAAY,EACZ,SAAY,MACZ,QAAU,EACV,QAAW,CACT,QAAU,EACV,QAAW,IACX,QAAW,QAIjB,cAAiB,CACf,UAAa,SACb,OAAU,CACR,QAAW,CACT,QAAU,EACV,KAAQ,QAEV,QAAW,CACT,QAAU,EACV,KAAQ,QAEV,QAAU,GAEZ,MAAS,CACP,KAAQ,CACN,SAAY,IACZ,YAAe,CACb,QAAW,IAGf,OAAU,CACR,SAAY,IACZ,KAAQ,GACR,SAAY,EACZ,QAAW,EACX,MAAS,GAEX,QAAW,CACT,SAAY,IACZ,SAAY,IAEd,KAAQ,CACN,aAAgB,GAElB,OAAU,CACR,aAAgB,KAItB,eAAiB,GAGvBC,MAAO,CACLC,SAAS,QACTC,QAAQ,IACRC,OAAO,IAEPC,IAAI,IACJC,KAAK,IAELC,MAAO,OACPC,OAAQ,OACFC,WAAW,c,2BCvGpBC,MAlBf,WAIQ,OAFJX,cAGQ,6BACI,6BACI,yBAAKY,IAAOC,IAAKC,UAAY,4BAGjC,yBAAKA,UAAY,QACb,wBAAIA,UAAY,cAAhB,oBCCLC,MAVf,WACE,OACE,6BACI,kBAAC,EAAD,MACD,kBAACC,EAAD,QCAaC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAAStB,OACP,kBAAC,IAAMuB,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.c208d498.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ImagePankaj.6b13e533.jpg\";","import React from 'react'\n\nclass Helo extends React.Component\n{\n    render()\n    {\n        return(\n            <h1>Helo {this.props.name}</h1>\n        )\n    }\n}\n\nexport default Helo","import React, { useState } from 'react'\n\nfunction CounterExample()\n{\n    const [count, setCount] = useState(11)\n\n\n\n    // console.log(useState)\n \n    return(\n        <div>\n            <h1>{   count}</h1>\n            <h1 onClick = {() => setCount(count + 1)}>\n            Plus\n            </h1>\n            <h1 onClick = {() => setCount(count - 1)}>\n            Minus\n            </h1>\n        </div>\n    )\n}\n\nexport default CounterExample","import React from 'react'\nimport { render } from '@testing-library/react'\nimport Particles from 'react-particles-js'\n\n\nfunction ParticlesRender()\n{\n    render()\n    {\n        return(\n            <Particles\n                params={{\n                    \"particles\": {\n                        \"number\": {\n                          \"value\": 80,\n                          \"density\": {\n                            \"enable\": true,\n                            \"value_area\": 800\n                          }\n                        },\n                        \"color\": {\n                          \"value\": \"#ffffff\"\n                        },\n                        \"shape\": {\n                          \"type\": \"circle\",\n                          \"stroke\": {\n                            \"width\": 0,\n                            \"color\": \"#000000\"\n                          },\n                          \"polygon\": {\n                            \"nb_sides\": 5\n                          }\n                        },\n                        \"opacity\": {\n                          \"value\": 0.5,\n                          \"random\": false,\n                          \"anim\": {\n                            \"enable\": false,\n                            \"speed\": 1,\n                            \"opacity_min\": 0.1,\n                            \"sync\": false\n                          }\n                        },\n                        \"size\": {\n                          \"value\": 1,\n                          \"random\": true,\n                          \"anim\": {\n                            \"enable\": false,\n                            \"speed\": 40,\n                            \"size_min\": 0.1,\n                            \"sync\": false\n                          }\n                        },\n                        \"line_linked\": {\n                          \"enable\": true,\n                          \"distance\": 150,\n                          \"color\": \"#ffffff\",\n                          \"opacity\": 0.4,\n                          \"width\": 1\n                        },\n                        \"move\": {\n                          \"enable\": true,\n                          \"speed\": 4,\n                          \"direction\": \"none\",\n                          \"random\": false,\n                          \"straight\": false,\n                          \"out_mode\": \"out\",\n                          \"bounce\": false,\n                          \"attract\": {\n                            \"enable\": false,\n                            \"rotateX\": 600,\n                            \"rotateY\": 1200\n                          }\n                        }\n                      },\n                      \"interactivity\": {\n                        \"detect_on\": \"canvas\",\n                        \"events\": {\n                          \"onhover\": {\n                            \"enable\": true,\n                            \"mode\": \"grab\"\n                          },\n                          \"onclick\": {\n                            \"enable\": true,\n                            \"mode\": \"push\"\n                          },\n                          \"resize\": true\n                        },\n                        \"modes\": {\n                          \"grab\": {\n                            \"distance\": 140,\n                            \"line_linked\": {\n                              \"opacity\": 1\n                            }\n                          },\n                          \"bubble\": {\n                            \"distance\": 400,\n                            \"size\": 40,\n                            \"duration\": 2,\n                            \"opacity\": 8,\n                            \"speed\": 3\n                          },\n                          \"repulse\": {\n                            \"distance\": 200,\n                            \"duration\": 0.4\n                          },\n                          \"push\": {\n                            \"particles_nb\": 4\n                          },\n                          \"remove\": {\n                            \"particles_nb\": 2\n                          }\n                        }\n                      },\n                      \"retina_detect\": true\n                    \n                }}\n                style={{\n                  position:'fixed',\n                  padding:'0',\n                  margin:'0',\n                \n                  top:'0',\n                  left:'0',\n                \n                  width: '100%',\n                  height: '100%',\n                        background: `#072F5F` \n                 }}\n                />\n        )\n    }\n}\n\nexport default ParticlesRender","import React from 'react'\nimport { render } from '@testing-library/react'\nimport './Style.css'\nimport pic from '../Images/ImagePankaj.jpg'\n\n\nfunction Name()\n{\n    render()\n    {\n        return(\n            <div>\n                <div >\n                    <img src = {pic} className = \"circle-image imageLogo\"/>\n                </div>\n\n                <div className = \"name\">\n                    <h1 className = \"name-style\">Pankaj Katkar</h1>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Name","import React from 'react';\nimport './App.css';\nimport Helo from './component/hello'\nimport CounterExample from './component/counterExample'\nimport ParticlesRender from './component/Particles';\nimport Name from './component/Name';\n\n\nfunction App() {\n  return (\n    <div>\n        <Name />\n       <ParticlesRender/>\n    </div>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}